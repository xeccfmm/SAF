### ENCRYPTING LOGIN CREDENTIALS ON Mon, 14 May 2018 07:17:52 EDT FOR APPLICATION=SeleniumDemo, version=1.0###

### BELOW PROPERTY VALUES HAVE BEEN UPDATED ON Mon, 14 May 2018 07:15:37 EDT FOR APPLICATION=<TO BE DEFINED>###
### BELOW PROPERTY VALUES HAVE BEEN CREATED ON Mon, 14 May 2018 07:15:37 EDT FOR APPLICATION=SeleniumDemo ###
### DISABLE ANY KEY-VALUE PAIR BY PREFIXING ITS LINE WITH '#', REMOVE '#' to RE-ENABLE IT ###
### YOU MAY REFERENCE OTHER VALUES DEFINED IN THE PROPERTIES FILE BY REFERENCING THE KEY NAME AS ${KEY} IN THE VALUE PORTION ###
### REPLACE ANY KEY VALUE PAIR HAVING '<TO BE DEFINED>' WITH ITS APPROPRIATE VALUE ###
### PROPERTY ${SESSION_LOCATION} IS CONSIDERED DYNAMIC AND RESOLVED AT RUNTIME - IT CAN BE USED TO REPRESENT THE DIRECTORY ###
### LOCATION FOR SESSION FILES ###
################ PLACE APPLICATION USER-DEFINED PROPERTIES HERE ################
#Placeholder for specifying application specific files used by the application.  Specify absolute or relative paths, delimited by ';'.
#The list will be checked on application startup
MANDATORY_APPLICATION_FILES=

#Placeholder for specifying directories  used by the application.  Specify absolute or relative paths, delimited by ';'.
#The list will be checked on application startup
MANDATORY_APPLICATION_DIRS=

#Define those properties that can be set in the runtime environment.  More than one properties can be specified as a semicolon
#delimited list.  Those properties will be checked on startup, and if defined in the runtime environment - will override the setting
#in this configuration file.  For example, setting environment variable BASE_DIR=/optional/path will override the current definition of
#BASE_DIR setting in this file with value /optional/path.
#You can also append instead of replace an existing value by adding '.append' to the variable below.
#For example, EMAIL_HTML_FILE.append will concatenate the existing value of property EMAIL_HTML_FILE with the value set in the
#runtime environment
ENVIRONMENT_PROPERTIES=

################ FOLLOWING PROPERTIES ARE SYSTEM RELATED ################
#Name of application, must be 'file-friendly' as any snaphots taken use this value in its filename.  Note the application name is
#used for encrypting any userids/passwords, changing it will invalidate them and will require re-entering them to be re-encrypted
APPLICATION_NAME=SeleniumDemo

#Version number of application
APPLICATION_VERSION=1.0

#Optional property - if the application can be ran in several modes.  For example, the application can be ran as a smoketest or as
#detailed regression testing.  Used when several test ids are registered in HP ALM resource module representing the various modes
APPLICATION_MODE=

#The file (this file) containing all properties needed to configure the application
PROPERTY_FILE=c:/work/saf3.0/SAF_Default.properties

#Base directory location of application and this application configuration property file
BASE_DIR=c:/work/saf3.0

#Test Set id represents the current release that is being tested.  Can be set here, or derived from HP ALM resource module.
#If set, must be updated occassionally to reflect the latest release test set
TEST_SET_ID=

#The download directory location to save browser downloads
DOWNLOAD_DIR=${BASE_DIR}/downloads

#Threshold directory size for download directory - specify size followed by any of the following letters 'KMGTPE'
#denoting the byte size.  The application will log warnings when exceeded
DOWNLOAD_DIR_SIZE=1GB

#File location for storing temp files for this session.  Location is cleared on subsequent runs
TEMP_DIR=${BASE_DIR}/temp

#File location to place HTML Archive Reports (HAR) - used for collecting performance testing information
#See the BROWSERMOBPROXY section below for its use
HAR_DIR=${BASE_DIR}/har

#File location to place log files
LOG_DIR=${BASE_DIR}/logs

#File location to place email files - note prior email files are deleted on new session startup
EMAILS_DIR=${BASE_DIR}/emails

#File location to place browser drivers such as Chrome, IE and phantomJS drivers
DRIVERS_DIR=${BASE_DIR}/drivers

#File location to place screen capture snapshots files - note prior snapshot files are deleted on new session startup
SNAPSHOT_DIR=${BASE_DIR}/snapshot

#File location to place video screen recordings files
VIDEO_DIR=${BASE_DIR}/videos

#File location to place image files for Sikulix
IMAGE_DIR=${BASE_DIR}/imgs

#File location to place customized template files
TEMPLATES_DIR=${BASE_DIR}/templates

#List of files to store with session files - copied to configuration directory and accessible via the sessions menu
#option - Configuration Settings.  Files are specified as a semi-colon delimited list
ARCHIVE_FILE_LIST=

#The maximum # of HAR sessions to keep in HAR_DIR
HAR_MAX_DIRS=6

#The various environments that the application can run from.  The list of comma-delimited values can be further customized as needed
ENVIRONMENT_TYPES=UAT,DCAT,PROD

#Defines the environment for the application to run from.  If the application needs login credentials to login, then specify a
#value from ENVIRONMENT_TYPES and uncomment if applicable
ENVIRONMENT=UAT

#The various user types that can run the application.  The list of comma-delimited values can be further customized as needed
USER_TYPES=INTERNAL,EXTERNAL,TOKEN

#Defines the user type for running the application.  If the application needs login credentials to login, then specify a value from
#USER_TYPES and uncomment if applicable
#USER=INTERNAL

#The various webdrivers (browsers) supported by the framework specified as a list of comma-delimited values
BROWSER_TYPES=firefoxdriver,iedriver,chromedriver,safaridriver,phantomjsdriver,edgedriver,remotedriver,saucelabdriver,htmlunitdriver

#Specifies the browser driver to use from the list of BROWSER_TYPES
BROWSER=chromedriver

################ FOLLOWING PROPERTIES ARE APPLICABLE TO ALL BROWSER WEB DRIVERS ################
#A short timeout value specified in seconds for this session - used for explicit waits, see waitFor*() methods in WebDriver
TIMEOUT_SHORT=5

#A long timeout value specified in seconds for this session - used for explicit waits, see waitFor*() methods in WebDriver
TIMEOUT_LONG=10

#Defines the timeout to wait for an event to occur before aborting - default is zero as the use of explicit waits is strongly
#recommended, see the waitFor*() methods in WebDriver
IMPLICIT_WAIT_TIMEOUT=0

#Defines the timeout to wait for a web page to load before aborting
PAGELOAD_TIMEOUT=30

#Sets the amount of time to wait for an asynchronous script to finish execution before throwing an error. If the timeout is negative,
#then the script will be allowed to run indefinitely
SCRIPT_TIMEOUT=60

#Combat slow websites by automatically retrying the specified number of times, 0 to disable, default is 3
PAGELOAD_RETRIES=3

#Delete any pre-existing cookies on startup of the browser - specify true or false
DELETE_COOKIES=false

#If set to true, will save files for each browser session in a unique directory under the browser DOWNLOAD_DIR using
#format MMMdd_HH_mm
BROWSER_DOWNLOAD_SESSION_ENABLED=true

#If defined, represents a static subdirectory under DOWNLOAD_DIR to save files for this session
BROWSER_DOWNLOAD_SESSION_SUBDIR=

#This setting controls if popup messages appear during browser execution - specify true or false
VERBOSE=true

#Number of seconds to display popup messages, if VERBOSE setting is enabled
VERBOSE_DELAY=3

#Determines if screen capture is enabled - specify true or false
SNAPSHOT=true

#Determines if screen capture is enabled when a fatal error is encountered
SNAPSHOT_ON_ERROR=true

#Determines if a snapshot should be taken when the browser navigates to a new screen.  Default is false - use this option sparingly to
#show the various screens visited per session
SNAPSHOT_ON_SCREEN_CHANGE=false

#Determines if to highlight the current web element that the application is interacting with on the screen - specify true or false
WEBELEMENT_HIGHLIGHT=true

#The color for highlighting the web element if setting WEBELEMENT_HIGHLIGHT is enabled
WEBELEMENT_HIGHLIGHT_COLOR=blue

################ THIS SECTION CONTAINS SETTINGS FOR EACH WEBDRIVER USED BY OPEN SOURCE SELENIUM ################
################ FOLLOWING PROPERTIES ARE APPLICABLE TO MOZILLA FIREFOX WEBDRIVER ################
#Consult this link for further info on running the FireFoxDriver:https://github.com/SeleniumHQ/selenium/wiki/FirefoxDriver
### Selenium Webdriver version 3.5.3 was last certified with Firefox browser version 55.0.3 and Gecko driver 0.18.0 ###
#Determines if to kill prior running Firefox instances before launching a new one - specify false when testing code
FIREFOXDRIVER_KILL_SERVER_INSTANCES=false

#Name of Firefox webdriver process(es).  More than one processes are delimited by ';'.  Used with KILL_SERVER_INSTANCES flag to remove
#other Firefox webdriver processes
FIREFOXDRIVER_SERVER_PROCESSES=geckodriver.exe;firefox.exe;gecko.cmd

#Persists Firefox webdriver session, instead of closing it out.  This is handy during automation development as it allows you to pick
#off where you left off, instead of running through earlier screens again
FIREFOXDRIVER_PERSIST_SESSION=false

#Name of Firefox webdriver server process to start up
FIREFOXDRIVER_SERVER=${DRIVERS_DIR}/gecko.cmd

#Avoid popup exception error when closing out the Geckodriver at end of the session.  Setting to false will disable the error, however
#the browser will remain on the screen
FIREFOXDRIVER_CLOSE_ON_EXIT=false

#Specify a customized pre-existing profile to use or leave blank.  Below FIREFOXDRIVER_EXTENSIONS and FIREFOXDRIVER_PROFILE_SETTINGS
#will not be loaded if this option is used
FIREFOXDRIVER_PROFILE_FILE=

#Determine if to create a new profile or use default containing all settings.  If FIREFOX_PROFILE_FILE setting is defined, it will
#take precedence regardless if this property is set to true
FIREFOXDRIVER_CREATE_PROFILE=true

#Full pathname including Firefox.exe for running in place of the Selenium Firefox webdriver.  Used when you want to use the settings
#(cache, cookies) of Firefox vs creating them via the Selenium webdriver or when running different versions of Firefox on the machine
FIREFOXDRIVER_BINARY_EXECUTABLE=

#Enable capture of HTML Archive Report for performance testing by setting this value to 'on', default is off.
#Used with properties FIREFOXDRIVER_PROFILE_SETTINGS and HAR_CURRENT_DIR for output file location
FIREFOXDRIVER_HAR_CAPTURE=off

#A string representing the user agent (iPhone, Android, iPad, etc) that you want to emulate
FIREFOXDRIVER_USER_AGENT_STRING=

#List of extensions to load, delimited by ';'.  Only those found on disk will be loaded.  For latest firebug extension,
#see https://getfirebug.com/releases/firebug/2.0/.  For latest netexport extension, see http://getfirebug.com/releases/netexport/.
#For viewing a HAR file, you can use
#http://www.softwareishard.com/har/viewer/ or import into Fiddler UI.
#Note that this property will not be loaded if FIREFOX_PROFILE_FILE is defined
FIREFOXDRIVER_EXTENSIONS=${DRIVERS_DIR}/extensions/Firefox/*.xpi

#List of settings to configure Firefox profile.  Defined as key-value pairs, delimited by ';'.
#See site http://www.toolsqa.com/selenium-webdriver/custom-firefox-profile/ for further details.
#Note that this property will not be loaded if FIREFOX_PROFILE_FILE is defined
FIREFOXDRIVER_PROFILE_SETTINGS=security.insecure_field_warning.contextual.enabled=false;security.insecure_password.ui.enabled=false;browser.tabs.remote.autostart=false;browser.tabs.remote.autostart.2=false;app.update.enabled=false;dom.successive_dialog_time_limit=0;pdfjs.disabled=true;extensions.netmonitor.har.enableAutomation=true;extensions.netmonitor.har.contentAPIToken=test;extensions.netmonitor.har.autoConnect=true;extensions.firebug.currentVersion=9.9.9;extensions.firebug.showStackTrace=true;extensions.firebug.delayLoad=false;extensions.firebug.showFirstRunPage=false;extensions.firebug.console.enableSites=true;extensions.firebug.script.enableSites=true;extensions.firebug.net.logLimit=1000;extensions.firebug.netexport.sendToConfirmation=false;extensions.firebug.defaultPanelName=net;extensions.firebug.allPagesActivation=${FIREFOXDRIVER_HAR_CAPTURE};extensions.firebug.net.enableSites=true;extensions.firebug.netexport.alwaysEnableAutoExport=true;extensions.firebug.netexport.showPreview=false;extensions.firebug.netexport.autoExportToFile=true;extensions.firebug.netexport.defaultLogDir=${HAR_CURRENT_DIR};extensions.firebug.netexport.autoExportToServer=false;extensions.firebug.netexport.Automation=true

#List of arguments to startup Firefox with delimited by ';'.  To run headless, append --headless;
FIREFOXDRIVER_ARGUMENTS=

#Directory location for downloading files from Firefox
FIREFOXDRIVER_DOWNLOAD_DIR=${BASE_DIR}/downloads

#Configure Firefox to prompt with a download dialogue box (true) when downloading files or accept automatically (false) - specify true
#or false
FIREFOXDRIVER_PROMPT_FOR_DOWNLOADS=false

#Set the level for logging with the Firefox webdriver.  See LOG4J_DEFAULT_LEVEL for values
FIREFOXDRIVER_LOG_LEVEL=TRACE

#Time to wait (in seconds) for FireFox driver to be fully initialized.  Value must be > 0 or 0 to disable
FIREFOXDRIVER_INIT_TIME=7

#Browser specific time to wait for element to appear on screen - essentially takes the time specified * the delay_factor.
#Applies to properties TIMEOUT_SHORT, TIMEOUT_LONG, IMPLICIT_WAIT_TIMEOUT, PAGELOAD_TIMEOUT and SCRIPT_TIMEOUT.  Default is 1
FIREFOXDRIVER_DELAY_FACTOR=2

################ FOLLOWING PROPERTIES ARE APPLICABLE TO GOOGLE CHROME WEBDRIVER ################
#Consult this link for further info on running the ChromeDriver:https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver
### Selenium Webdriver version 3.5.3 was last certified with Chrome browser version 60.x and Chrome driver version 2.32 ###
#Determines if to kill prior running Chrome instances before launching a new one - specify false when testing
CHROMEDRIVER_KILL_SERVER_INSTANCES=false

#Name of Chrome webdriver server process(es).  More than one processes are delimited by ';'.  Used with KILL_SERVER_INSTANCES flag to
#remove other Chrome webdriver processes
CHROMEDRIVER_SERVER_PROCESSES=chromedriver.exe;chrome.exe

#Name of Chrome webdriver server process to start up, usually located in the DRIVERS_DIR directory
CHROMEDRIVER_SERVER=${DRIVERS_DIR}/chromedriver.exe

#Specify port for Chrome Driver webdriver service to listen to - if 0 or not specified, any random free port will be used
CHROMEDRIVER_PORT=0

#Full pathname including Chrome.exe for running in place of the Selenium Chrome webdriver.  Used when you want to use the settings
#(cache, cookies) of Chrome vs creating them via the Selenium webdriver
CHROMEDRIVER_BINARY_EXECUTABLE=

#A string representing the user agent (iPhone, Android, iPad, etc) that you want to emulate
CHROMEDRIVER_USER_AGENT_STRING=

#A string representing the device to emulate, see following website for more info
#https://sites.google.com/a/chromium.org/chromedriver/mobile-emulation
CHROMEDRIVER_EMULATE_DEVICE=

#List of extensions to load, delimited by ';'.  Only those found on disk will be loaded.  For downloading extensions,
#see http://chrome-extension-downloader.com/ for further details.
CHROMEDRIVER_EXTENSIONS=${DRIVERS_DIR}/extensions/Chrome/*.crx

#List of options to configure Chrome profile.  Defined as key-value pairs, delimited by ';'.
#See https://sites.google.com/a/chromium.org/chromedriver/capabilities for further details
CHROMEDRIVER_OPTIONS=dom.successive_dialog_time_limit=0;profile.default_content_settings.popups=0;profile.default_content_settings.notifications=0;profile.default_zoom_level=0

#List of arguments to startup Chrome with delimited by ';'.  To run in headless mode append 'headless;disable-gpu'
#See https://sites.google.com/a/chromium.org/chromedriver/capabilities for further details
CHROMEDRIVER_ARGUMENTS=start-maximized;verbose;disable-popup-blocking;disable-extensions

#Directory location for downloading files from Chrome
CHROMEDRIVER_DOWNLOAD_DIR=${BASE_DIR}/downloads

#Configure Chrome to prompt with a download dialogue box when downloading files (true) or accept automatically (false) - specify true
#or false
CHROMEDRIVER_PROMPT_FOR_DOWNLOADS=false

#Time to wait (in seconds) for Chrome driver to be fully initialized.  Value must be > 0 or 0 to disable
CHROMEDRIVER_INIT_TIME=7

#Browser specific time to wait for element to appear on screen - essentially takes the time specified * the delay_factor.
#Applies to properties TIMEOUT_SHORT, TIMEOUT_LONG, IMPLICIT_WAIT_TIMEOUT, PAGELOAD_TIMEOUT and SCRIPT_TIMEOUT.  Default is 1
CHROMEDRIVER_DELAY_FACTOR=2

################ FOLLOWING PROPERTIES ARE APPLICABLE TO MICROSOFT INTERNET EXPLORER WEBDRIVER ################
#Consult this link for further info on running the IEDriver:https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver
### Selenium Webdriver version 3.5.3 was last certified with Internet Explorer browser version 11.x and IE driver version 3.5.1.0 ###
#Determines if to kill prior running IE instances before launching a new one - specify false when testing
IEDRIVER_KILL_SERVER_INSTANCES=true

#Name of IE webdriver server process(es).  More than one processes are delimited by ';'.
#Used with KILL_SERVER_INSTANCES flag to remove other IE webdriver processes
IEDRIVER_SERVER_PROCESSES=iedriverserver.exe;iexplore.exe

#Name of IE webdriver server process to start up, usually located in the DRIVERS_DIR directory
IEDRIVER_SERVER=${DRIVERS_DIR}/iedriverserver.exe

#Specify port for IEDriver webdriver service to listen to
IEDRIVER_PORT=5555

#Specify the host IP address for IEDriver webdriver service to listen for commands
IEDRIVER_IP_ADDRESS=127.0.0.1

#List of options to configure IE profile.  Defined as key-value pairs, delimited by ';'.
#See https://code.google.com/p/selenium/wiki/DesiredCapabilities for further details
IEDRIVER_OPTIONS=introduce_flakiness_by_ignoring_security_domains=true;unexpected_alert_behavior=accept;javascriptenabled=true;enablepersistenthover=true;ie.ensureCleanSession=false;ignoreZoomSetting=false;requireWindowFocus=false;silent=true;ignoreProtectedModeSettings=true;initialBrowserUrl="";enablePersistentHover=true;enableElementCacheCleanup=false;browserAttachTimeout=0;ie.forceCreateProcessApi=false;pageLoadStrategy=normal;ie.usePerProcessProxy=false;handlesAlerts=true;nativeEvents=true;elementScrollBehavior=0;takesScreenshot=true;cssSelectorsEnabled=true;ie.browserCommandLineSwitches=--logLevel=${IEDRIVER_LOG_LEVEL},--extractPath=${TEMP_DIR},--logFile=${LOG_DIR}/${APPLICATION_NAME}_IE.log

#Time to wait (in seconds) for IE services to be fully initialized.  Define a value if receiving error='NoSuchWindowException:
#Unable to get browser', value must be > 0 or 0 to disable
IEDRIVER_INIT_TIME=14

#Browser specific time to wait for element to appear on screen - essentially takes the time specified * the delay_factor.
#Applies to properties TIMEOUT_SHORT, TIMEOUT_LONG, IMPLICIT_WAIT_TIMEOUT, PAGELOAD_TIMEOUT and SCRIPT_TIMEOUT.  Default is 1
IEDRIVER_DELAY_FACTOR=4

#Directory location for downloading files from IE webdriver
IEDRIVER_DOWNLOAD_DIR=${BASE_DIR}/downloads

#Set the level for logging with the IE webdriver.  See LOG4J_DEFAULT_LEVEL for values
IEDRIVER_LOG_LEVEL=TRACE

################ FOLLOWING PROPERTIES ARE APPLICABLE TO MICROSOFT EDGE WEBDRIVER (APPLICABLE TO WINDOWS 10 & ABOVE ONLY) ################
#Access the Selenium official download page and search for the Microsoft Edge Driver link for more info:
#http://www.seleniumhq.org/download/
### NOTE: Unable to certify Selenium Webdriver version 3.5.3 with the Edge driver due to lack of available Windows 10 platform.  Suggest the use of SauceLabDriver as an alternate  ###
#Determines if to kill prior running EDGE instances before launching a new one - specify false when testing
EDGEDRIVER_KILL_SERVER_INSTANCES=true

#Name of EDGE webdriver server process(es).  More than one processes are delimited by ';'.  Used with KILL_SERVER_INSTANCES flag to
#remove other EDGE webdriver processes
EDGEDRIVER_SERVER_PROCESSES=MicrosoftWebDriver.exe;edge.exe

#Name of EDGE webdriver server process to start up, usually located in the DRIVERS_DIR directory
EDGEDRIVER_SERVER=${DRIVERS_DIR}/MicrosoftWebDriver.exe

#Specify port for EDGEDriver webdriver service to listen to
EDGEDRIVER_PORT=5555

#Specify the IP address for EDGEDriver webdriver service to listen to
EDGEDRIVER_IP_ADDRESS=127.0.0.1

#Directory location for downloading files from EDGE webdriver
EDGEDRIVER_DOWNLOAD_DIR=${BASE_DIR}/downloads

#Set the level for logging with the EDGE webdriver.  See LOG4J_DEFAULT_LEVEL for values
EDGEDRIVER_LOG_LEVEL=TRACE

#Time to wait (in seconds) for EdgeDriver services to be fully initialized.  Define a value if receiving error='NoSuchWindowException:
#Unable to get browser', value must be > 0 or 0 to disable
EDGEDRIVER_INIT_TIME=14

#Browser specific time to wait for element to appear on screen - essentially takes the time specified * the delay_factor.
#Applies to properties TIMEOUT_SHORT, TIMEOUT_LONG, IMPLICIT_WAIT_TIMEOUT, PAGELOAD_TIMEOUT and SCRIPT_TIMEOUT.  Default is 1
EDGEDRIVER_DELAY_FACTOR=4

################ FOLLOWING PROPERTIES ARE APPLICABLE TO APPLE SAFARI WEBDRIVER ################
#Consult this link for further info on running the Safari Driver:https://github.com/SeleniumHQ/selenium/wiki/SafariDriver
### NOTE: Unable to certify Selenium Webdriver version 3.5.3 with the Safari driver due to lack of available Apple machine.  Suggest the use of SauceLabDriver as an alternate  ###
#Determines if to kill prior running Safari instances before launching a new one - specify false when testing
SAFARIDRIVER_KILL_SERVER_INSTANCES=true

#Name of Safari webdriver server process(es).  More than one processes are delimited by ';'.  Used with KILL_SERVER_INSTANCES flag to
#remove other Safari webdriver processes
SAFARIDRIVER_SERVER_PROCESSES=safari.exe

#Name of Safari webdriver process(es).  More than one processes are delimited by ';'.  Used with KILL_SERVER_INSTANCES flag to
#remove other Safari webdriver processes
SAFARIDRIVER_SERVER_PROCESS=safari.exe

#Name of Safari webdriver server process to start up
SAFARIDRIVER_SERVER=safari.exe

#Full pathname including Safari.exe for running the Selenium Safari webdriver.
SAFARIDRIVER_BINARY_EXECUTABLE=C:/Program Files (x86)/Safari/safari.exe

#List of extensions to load, delimited by ';'.  Only those found on disk will be loaded.  For latest firebug extension for Safari, see
#https://extensions.apple.com/details/?id=com.slicefactory.firebug-M6DQ5JZ52E.
SAFARIDRIVER_EXTENSIONS=${DRIVERS_DIR}/extensions/Safari/*.safariextz;

#Directory location for downloading files from SAFARI webdriver
SAFARIDRIVER_DOWNLOAD_DIR=${BASE_DIR}/downloads

#Set the level for logging with the IE webdriver.  See LOG4J_DEFAULT_LEVEL for values
SAFARIDRIVER_LOG_LEVEL=TRACE

#Time to wait (in seconds) for SafariDriver services to be fully initialized.  Define a value if receiving
#error='NoSuchWindowException: Unable to get browser', value must be > 0 or 0 to disable
SAFARIDRIVER_INIT_TIME=14

#Browser specific time to wait for element to appear on screen - essentially takes the time specified * the delay_factor.
#Applies to properties TIMEOUT_SHORT, TIMEOUT_LONG, IMPLICIT_WAIT_TIMEOUT, PAGELOAD_TIMEOUT and SCRIPT_TIMEOUT.  Default is 1
SAFARIDRIVER_DELAY_FACTOR=2

################ FOLLOWING PROPERTIES ARE APPLICABLE TO PHANTOMJS WEBDRIVER - USED FOR HEADLESS EXECUTION ################
### Selenium Webdriver version 3.5.3 was last certified with PhantomJSDriver version 2.1.1 ###
#Determines if to kill prior running phantomjs driver instances before launching a new one - specify false when testing
PHANTOMJSDRIVER_KILL_SERVER_INSTANCES=true

#Name of phantomjs webdriver server process(es).  More than one processes are delimited by ';'.  Used with
#KILL_SERVER_INSTANCES flag to remove other phantomjs webdriver processes
PHANTOMJSDRIVER_SERVER_PROCESSES=phantomjs.exe

#Name of phantomjs webdriver server process to start up, usually located in the DRIVERS_DIR directory
PHANTOMJSDRIVER_SERVER=${DRIVERS_DIR}/phantomjs.exe

#Enable java script for phantomjs webdriver
PHANTOMJSDRIVER_JAVASCRIPT_ENABLED=true

#Enable taking screen shots for phantomjs webdriver
PHANTOMJSDRIVER_TAKESCREENSHOT_ENABLED=true

#Time to wait (in seconds) for PhantomJS services to be fully initialized.  Define a value if receiving error initializing
#RemoteDriver, value must be > 0 or 0 to disable
PHANTOMJSDRIVER_INIT_TIME=7

#Browser specific time to wait for element to appear on screen - essentially takes the time specified * the delay_factor.
#Applies to properties TIMEOUT_SHORT, TIMEOUT_LONG, IMPLICIT_WAIT_TIMEOUT, PAGELOAD_TIMEOUT and SCRIPT_TIMEOUT.  Default is 1
PHANTOMJSDRIVER_DELAY_FACTOR=1

################ FOLLOWING PROPERTIES ARE APPLICABLE TO HTLUNITDRIVER - USED FOR HEADLESS EXECUTION ################
### Selenium Webdriver version 3.5.3 was last certified with HtmlUnitDriver version 2.1.1 ###
#Determines if to kill prior running htmlunitdriver instances before launching a new one - specify false when testing
HTMLUNITDRIVER_KILL_SERVER_INSTANCES=true

#Name of htmlunitdriver server process(es).  More than one processes are delimited by ';'.  Used with
#KILL_SERVER_INSTANCES flag to remove other htmlunitdriver processes
HTMLUNITDRIVER_SERVER_PROCESSES=htmlunitdriver.exe

#Enable java script for htmlunitdriver
HTMLUNITDRIVER_JAVASCRIPT_ENABLED=true

#Browser specific time to wait for element to appear on screen - essentially takes the time specified * the delay_factor.
#Applies to properties TIMEOUT_SHORT, TIMEOUT_LONG, IMPLICIT_WAIT_TIMEOUT, PAGELOAD_TIMEOUT and SCRIPT_TIMEOUT.  Default is 1
HTMLUNITDRIVER_DELAY_FACTOR=1

################ FOLLOWING PROPERTIES ARE APPLICABLE TO THE SELENIUM REMOTE WEBDRIVER ################
#Persists Remote webdriver session, instead of closing it out.  This is handy during automation development as it allows you
#to pick off where you left off, instead of running through earlier screens again
REMOTEDRIVER_PERSIST_SESSION=false

#URL of Local/Remote webdriver server to connect to - specify a valid URL pointing to the local/remote node
REMOTEDRIVER_WEB_SERVER=http://localhost:4444

#Time in seconds to wait to get a response from REMOTEDRIVER_WEB_SERVER.  Default is 10
REMOTEDRIVER_WEB_TIMEOUT=10

#Type of remotedriver session - values are STANDALONE or GRID.  In either case, ensure the REMOTEDRIVER_WEB_SERVER is online before
#initiating session.
#See ${BASE_DIR}/grid/simple_grid_readme.txt for further info on these two modes
REMOTEDRIVER_SESSION_TYPE=GRID

#Name of browser to emulate.  Specify the type of browser that will be remotely run for this session, defined types are firefox,
#chrome, internet explorer, etc
#See https://selenium.googlecode.com/git/docs/api/java/org/openqa/selenium/remote/DesiredCapabilities.html
#REMOTEDRIVER_BROWSER=firefox
#REMOTEDRIVER_BROWSER=internet explorer
REMOTEDRIVER_BROWSER=chrome

#List of capabilities to configure Remote Driver.  Defined as key-value pairs, delimited by ';'.
#REMOTEDRIVER_PROFILE_SETTINGS=${FIREFOXDRIVER_PROFILE_SETTINGS}
#REMOTEDRIVER_PROFILE_SETTINGS=${IEDRIVER_OPTIONS}
REMOTEDRIVER_CAPABILITY_SETTINGS=${CHROMEDRIVER_OPTIONS}

#List of profile options to configure Remote Driver - applicable to FireFox driver
REMOTEDRIVER_PROFILE_SETTINGS=

#Time to wait (in seconds) for Remote Driver services to be fully initialized.  Define a value if receiving error initializing
#RemoteDriver, value must be > 0 or 0 to disable
REMOTEDRIVER_INIT_TIME=7

#Browser specific time to wait for element to appear on screen - essentially takes the time specified * the delay_factor.
#Applies to properties TIMEOUT_SHORT, TIMEOUT_LONG, IMPLICIT_WAIT_TIMEOUT, PAGELOAD_TIMEOUT and SCRIPT_TIMEOUT.  Default is 1
REMOTEDRIVER_DELAY_FACTOR=4

################ FOLLOWING PROPERTIES ARE APPLICABLE TO THE SAUCE LAB REMOTE WEBDRIVER ################
#Use this driver for cloud testing by using the Sauce Lab vendor cloud testing services - see https://saucelabs.com/ for more details
##To determine the latest status of the cloud testing services, check https://status.saucelabs.com/
#Three connectivity modes are available - DIRECT, LOCAL_TUNNEL or TUNNEL_POOL connections.  Property SAUCELABDRIVER_CONNECT_TYPE
#determines the connection type for the session:
#DIRECT assumes the website to test is available through the public Internet
#LOCAL_TUNNEL is used when the website to be tested is internal and behind the firewall.  It will create a local tunnel proxy for
#connection to it.  The tunnel will be destroyed after the session
#TUNNEL_POOL connection uses a pre-existing tunnel connection pool to connect to an internal website.  The tunnel connection
#is returned to the pool after the session is completed
#For establishing LOCAL_TUNNEL or TUNNEL_POOL connection, the Sauce Connect application is used

#Further description of the Sauce Connect is provided below
SAUCELABDRIVER_CONNECT_TYPE=TUNNEL_POOL

#You must have an active Sauce Lab account to use this driver.  User id is automatically encrypted
#See the SauceLab_Driver_README.txt for more detail on re-encrypting Sauce Lab credentials
SAUCELABDRIVER_UID=?&a@b)$d%^h9Te//Zs5m9XouDd5YLiCAw==

#Specify Sauce Lab access key - necessary to connect to cloud.  Password is automatically encrypted
#See the SauceLab_Driver_README.txt for more detail on re-encrypting Sauce Lab credentials
SAUCELABDRIVER_ACCESS_PWD=EeMhy6sUpfVS1hR6d6oEILTS5PYRS67lLHdwMy3CVj+GJP2lR08+Qg==^&G@$(@#!

#For connecting to Sauce Lab REST API, define the outbound proxy.  Valid values are 'GENERATE' to dynamically determine proxy,
#'DIRECT' to bypass, or list the specific proxy servers to use as a semi-colon delimited list
SAUCELABDRIVER_PROXY_SELECTOR=GENERATE

#You may optionally specify one or more proxies to use.  Each proxy definiton defines the address and port, separated by a ','.
#More than one proxies can be defined, delimited by ';'.  Below is a commented-out example
#SAUCELABDRIVER_PROXY_SELECTOR=aaa-proxy.omnitesting.net:8080,8080;aaa-proxy.paaa.com:8080,8080;outboundproxy-pac.omnitesting.net:8081/accelerated_pac_base.pac,8080;ukproxy.omnitesting.net,8080;inprox
##y.omnitesting.net:8081/accelerated_pac_base.pac,8080

#Use this URL for setting up a DIRECT Sauce Connection - assume the URL to test is public and accessible on the Internet
SAUCELABDRIVER_DIRECT_URL=https://[SAUCELABDRIVER_UID]:[SAUCELABDRIVER_ACCESS_PWD]@ondemand.saucelabs.com:443/wd/hub

#Sauce Connect is a tunneling app that runs on the local network and opens a secure connection between a Sauce Labs virtual machine
#running your browser tests and an application or website you want to test that's on your local machine or behind a corporate
#firewall.  When enabled by property SAUCELABDRIVER_CONNECT_TYPE, it uses properties SAUCELABDRIVER_LOCAL_TUNNEL* properties
#to further define the local tunnel connection

#Sauce Connect port number used with SAUCELABDRIVER_LOCAL_TUNNEL_URL, default is 4445
SAUCELABDRIVER_LOCAL_TUNNEL_PORT_NO=8256

#Use this URL for setting up a local tunnel connection - assume the URL to test is private and behind a corporate firewall
#The local tunnel is created at the start of the session and destroyed at the end of the session
SAUCELABDRIVER_LOCAL_TUNNEL_URL=http://[SAUCELABDRIVER_UID]:[SAUCELABDRIVER_ACCESS_PWD]@localhost:${SAUCELABDRIVER_LOCAL_TUNNEL_PORT_NO}/wd/hub

#Miscellaneous settings for local tunnel connection - note that property --tunnel-identifier is calculated at runtime
#and should not be specified below.
#Specify keyword [PROXY] to have it calculated and replaced by --proxy address:port at runtime.
#See https://wiki.saucelabs.com/pages/viewpage.action?pageId=48365781 for more information on settings
SAUCELABDRIVER_LOCAL_TUNNEL_OTHER_SETTINGS=--tunnel-domains *.omnitesting.com,*.omnitesting.net [PROXY]

#Below works on some networks and will be tried in case SAUCELABDRIVER_LOCAL_TUNNEL_OTHER_SETTINGS does not work
SAUCELABDRIVER_LOCAL_TUNNEL_ALTERNATE_OTHER_SETTINGS=--no-autodetect --tunnel-domains *.omnitesting.com,*.omnitesting.net

#For using a tunnel pool connection, define below pool owner id(default is Tunnel_01).  Any tunnels created by below pool owner id are
#part of the connection pool and can be used in the session.  Note that the machines where the tunnels are created must reside on the
#same network segment as this application.

#See other SAUCELABDRIVER_LOCAL_TUNNEL_* properties for defining this type of connection below
SAUCELABDRIVER_TUNNEL_POOL_OWNER=Tunnel_01

#Specify Sauce Lab tunnel access key when using the Sauce Connect pool.  Password is automatically encrypted
#See the SauceLab_Driver_README.txt for more detail on re-encrypting Sauce Lab credentials
SAUCELABDRIVER_TUNNEL_POOL_ACCESS_PWD=B5a1HrZAvlJX7CTFRDbWPXpT81Cv2rGgZWYd0XrGZi+7ZYCUDbHY1g==^&G@$(@#!

#For tunnel connection pools, optionally specify one or more hosts where the Sauce Connect applications are running to filter
#its selection at runtime.  One of more hosts are delimited as a semi-colon string.  This has the effect to selectively
#divide the conection pool by its hosts.  Property SAUCELABDRIVER_TUNNEL_POOL_URL derives its value from this property.
#For example, specify one or more valid hosts where Sauce Connect application is running as in below commented example.
#It is assumed that the hostnames are on the same network segment and reachable by this application
#SAUCELABDRIVER_TUNNEL_POOL_HOSTS=SOMEPC001;SOMEPC002

#To use the whole connection pool, specify a blank value - this is the default
SAUCELABDRIVER_TUNNEL_POOL_HOSTS=

#Use this URL for connecting to a tunnel connection pool
SAUCELABDRIVER_TUNNEL_POOL_URL=http://[SAUCELABDRIVER_UID]:[SAUCELABDRIVER_ACCESS_PWD]@[SAUCELABDRIVER_TUNNEL_POOL_HOST]:[SAUCELABDRIVER_TUNNEL_POOL_PORT_NO]/wd/hub

#In case of error connecting to tunnel pool(maybe offline), should a LOCAL_TUNNEL connection be attempted?  Default is TRUE
SAUCELABDRIVER_TUNNEL_POOL_STEPDOWN=TRUE

#Below settings further define the runtime session regardless of the type of connection specified by SAUCELABDRIVER_CONNECT_TYPE
#Include options for logging, enabling screen recording, saving video file and logs and specifying the browser/device settings

#Enable log capture during test execution session - TRUE of FALSE
SAUCELABDRIVER_RECORD_LOGS=TRUE

#Time to wait (in seconds) for post-processing of video and log files from Sauce Lab
SAUCELABDRIVER_POST_PROCESS_SECONDS=40

#Number of times to wait during post-processing of video and log file from Sauce Lab
SAUCELABDRIVER_POST_PROCESS_TIMES=5

#Time in seconds to wait to get a HTTP (REST) response from SAUCE LAB URL.  Default is 40
SAUCELABDRIVER_TIMEOUT=40

#Time to wait (in seconds) for Remote Driver services to be fully initialized - value must be > 0 or 0 to disable
SAUCELABDRIVER_INIT_TIME=7

#Browser specific time to wait for element to appear on screen - essentially takes the time specified * the delay_factor.
#Applies to properties TIMEOUT_SHORT, TIMEOUT_LONG, IMPLICIT_WAIT_TIMEOUT, PAGELOAD_TIMEOUT and SCRIPT_TIMEOUT.  Default is 1
SAUCELABDRIVER_DELAY_FACTOR=3

#Name of device to emulate - see https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/
SAUCELABDRIVER_DEVICE=

#Device type to emulate - see https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/
SAUCELABDRIVER_DEVICE_TYPE=

#Device orientation to emulate - either portrait or landscape.  See https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/
SAUCELABDRIVER_DEVICE_ORIENTATION=

#Operating system version to run on - see https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/
SAUCELABDRIVER_PLATFORM=Windows 7

#Name of browser to emulate ie, chrome, safari, firefox, opera.  See https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/
SAUCELABDRIVER_BROWSER=chrome

#Version of browser/device, specify a specific version or latest, or latest-1, latest-2, etc.
#see https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/
SAUCELABDRIVER_VERSION=latest

#Enable video recording during test execution session - true of false
SAUCELABDRIVER_RECORD_VIDEO=true

#Enable screenshots during test execution session - true of false
SAUCELABDRIVER_RECORD_SCREENSHOTS=true

#Download the screenshots locally - true of false
SAUCELABDRIVER_DOWNLOAD_SCREENSHOTS=false

#The screen resolution to run the test execution session with.
#For valid values, see https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/
SAUCELABDRIVER_SCREEN_RESOLUTION=

#List of other capabilities to configure SauceLab Driver.  Defined as key-value pairs, delimited by ';'.
#Use SELENIUM_VERSION=${SELENIUM_VERSION} sparingly
#See https://wiki.saucelabs.com/display/DOCS/Test+Configuration+Options for complete list
SAUCELABDRIVER_OTHER_SETTINGS=name=${APPLICATION_NAME};build=${APPLICATION_VERSION};autoAcceptAlerts=true;public=team;tags=tag1,tag2

#Specify any miscellaneous information associated with this job - will be stored on SauceLab for this job execution
SAUCELABDRIVER_CUSTOM_DATA=SAF_Build=${SAF_BUILD};SAF_SELENIUM_VERSION=${SELENIUM_VERSION};EXECUTED=${APPLICATION_TIMESTAMP};LocalHost=${HOSTNAME}

#Build associated with this application.  Derived from current version as defined by property APPLICATION_VERSION
#Used on Saucelab Dashboard to group runs
SAUCELABDRIVER_BUILD_NUMBER=${APPLICATION_VERSION}

################ FOLLOWING PROPERTIES ARE APPLICABLE TO THE BROWSER MOB PROXY SERVER ################
#BrowserMob Proxy allows you to manipulate HTTP requests and responses, capture HTTP content, black-listing and white-listing
#content, and exporting performance data as a HTML Archive Report(HAR) file. Once enabled, it can be ran in one of two modes -
#embedded(default) where the server is brought up for the session or standalone where the server is already running.
#Use the methods of the BrowserMobProxy class and below section to interact with it, regardless of which mode is used.
#See the README.TXT file under the HAR directory for further information.
#Internet location:https://github.com/lightbody/browsermob-proxy
#Alternative for testing web site's performance is https://developers.google.com/speed/pagespeed/insights/

#Enable the use of Browser Mob Proxy in this session - default is false
BROWSERMOBPROXY_ENABLED=false

#Create an embedded browser proxy server for this session or use an existing standalone one - default is true.
#Note - if standalone (false), the server must be already running under BROWSERMOBPROXY_API_PORT and BROWSERMOBPROXY_CLIENT_HOST
BROWSERMOBPROXY_EMBEDDED=true

#Capture HAR content automatically(auto) or manually(manual).  When running manually, call createHar() and stopHar()
#to initiate and stop HAR collection.  Default is AUTO.
BROWSERMOBPROXY_HAR_CAPTURE_MODE=auto

#Browser Mob Proxy port for server - any freely available port on the client host machine
BROWSERMOBPROXY_API_PORT=9093

#Browser Mob Proxy IP address for proxy server - default is 127.0.0.1 or localhost when running locally.
#Use an ip address if referencing a remote BMP server over the use of a hostname as the DNS lookup of the hostname may fail depending on the network segment you happen to be calling from
BROWSERMOBPROXY_CLIENT_HOST=127.0.0.1

#Browser Mob Proxy IP address for outbound binding - default is blank
#Use IP address (numbers only) instead of hostname(alphanumeric)
BROWSERMOBPROXY_SERVER_HOST=

#Define the proxy for the application under test to communicate with when processing SSL commands through the BMP server.  Valid values are 'GENERATE' (default) to dynamically determine proxy,
#'DIRECT' to bypass, or list the specific proxy servers to use as a semi-colon delimited list.  Example:
#BROWSERMOBPROXY_PROXY_SELECTOR=bnym-proxy.omnitesting.net:8080,8080;aaa-proxy.paaa.com:8080,8080;outboundproxy-pac.omnitesting.net:8081/accelerated_pac_base.pac,8080;ukproxy.omnitesting.net,8080;inpr
##oxy.omnitesting.net:8081/accelerated_pac_base.pac,8080
BROWSERMOBPROXY_PROXY_SELECTOR=GENERATE

#Additional time to avoid timeout while using BMP - will be added to the DELAY_FACTOR value of the browser driver.  Default is 1, 0 to disable.  See DELAY_FACTOR for browser for more info
BROWSERMOBPROXY_DELAY_FACTOR=1

#Generate a HAR file for this session, HAR files are stored in location specified by the HAR_DIR property
BROWSERMOBPROXY_ENABLED_HARFILE=true

#Create a HAR file per web page - this option will create a separate HAR per each web page visited.  Default is true.
#Applicable when property BROWSERMOBPROXY_HAR_CAPTURE_MODE=AUTO and BROWSERMOBPROXY_ENABLED_HARFILE=true
BROWSERMOBPROXY_HARFILE_PER_PAGE=true

#HAR types to enable for HAR file generation - applicable only when BROWSERMOBPROXY_EMBEDDED=true, delimit with ';'
#see net.lightbody.bmp.proxy.CaptureType for further details
BROWSERMOBPROXY_HAR_ENABLE_TYPES=REQUEST_HEADERS;REQUEST_CONTENT;RESPONSE_HEADERS;RESPONSE_CONTENT

#HAR types to disable for HAR file generation  - applicable only when BROWSERMOBPROXY_EMBEDDED=true, delimit with ';'
#see net.lightbody.bmp.proxy.CaptureType for further details
BROWSERMOBPROXY_HAR_DISABLE_TYPES=REQUEST_COOKIES;RESPONSE_COOKIES;REQUEST_BINARY_CONTENT;RESPONSE_BINARY_CONTENT

#Simulate downstream (read) latency - specify rate in Kbps, for example specifying 30 will slow rate to speed comparable to a dial-up connection.
#Zero specifies not in use
BROWSERMOBPROXY_DOWNSTREAM_LATENCY=0

#Simulate upstream (write) latency - specify rate in Kbps, for example specifying 20 will slow rate to speed comparable to a dial-up connection.
#Zero specifies not in use
BROWSERMOBPROXY_UPSTREAM_LATENCY=0

#Simulate overall network latency in seconds.  Zero specifies not in use
BROWSERMOBPROXY_LATENCY=0

#Blacklist of unwanted sites to filter out during the session - below list is a regex list delimited by ';'.
#Example is:https://ad.*;https://tags.*;https://icons.*;https://*amazon*
BROWSERMOBPROXY_BLACKLIST=

#Whitelist of sites to include during the session - below list is a regex list delimited by ';'
BROWSERMOBPROXY_WHITELIST=

################ FOLLOWING PROPERTIES PERTAIN TO LOGGING CAPABILITIES FOR THE APPLICATION USING OPENSOURCE LIBRARY LOG4J ################
#LOG4J configuration file containing LOG4J properties used by the application-MANDATORY FILE
LOG4J_PROPERTIES_FILE=${BASE_DIR}/SAFLog4J.properties

#Defines the default level for logging with LOG4J - values in order of highest level to low are: ALL, TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
LOG4J_DEFAULT_LEVEL=INFO

#Property name in LOG4J configuration file referring to name of application log file
LOG4J_LOGFILE_PROPERTY=APPLICATION_LOG_FILE

#Property name in LOG4J configuration file referring to name of application HTML log file
LOG4J_HTML_LOGFILE_PROPERTY=APPLICATION_HTML_LOG_FILE

#Property name in LOG4J configuration file referring to the title to appear in HTML log file
LOG4J_APPLICATION_HTML_TITLE_PROPERTY=APPLICATION_HTML_TITLE

#Name of the application log file
LOG4J_BASEFILE=${APPLICATION_NAME}.log

#Name of the application HTML log file
LOG4J_HTML_BASEFILE=${APPLICATION_NAME}.html

#Browser title of the HTML log file
LOG4J_HTML_TITLE=${APPLICATION_NAME} version= ${APPLICATION_VERSION}

#Enable log events to be sent to a socket server for viewing by Chainsaw utility
LOG4J_CHAINSAW_ENABLED=false

#Host of socket server to communicate with.  Change only if directed by admin
LOG4J_CHAINSAW_HOST=10.109.196.10

#Port # to communicate with the socket server.  Change only if directed by admin
LOG4J_CHAINSAW_PORT=7078

### YOU MAY ALSO SET LOG LEVELS AT THE CLASS LEVEL BY SPECIFYING 'LOG4J_DEFAULT_CLASS_LOG_LEVEL_com.selenium.framework.Foo=DEBUG as a key
#where com.selenium.framework.Foo is the full class name of the class and the value (DEBUG) is one of the LOG4J LOG LEVELS ###
################ FOLLOWING PROPERTIES PERTAIN TO EMAILING CAPABILITIES FOR THE APPLICATION USING JAVAX.MAIL ################

#Determines if the application can email or not - specify true or false
EMAIL_ENABLED=false

#Mandatory name of the Simple Mail Transport Protocol server for sending email -  default is to use OmniTesting's SMTP server
SMTP_SERVER=smtp.omnitesting.net

#Optional port number for SMTP_SERVER if applicable
SMTP_PORT=0

#Enables Transport Layer Security (TLS) if SMTP server supports it - usually true
SMTP_TLS=true

#Optional userid depending on SMTP server being used
SMTP_UID=

#Optional password depending on SMTP server being used
SMTP_PWD=

#Mandatory field denoting who is sending the email
EMAIL_FROM=OmniTesting_QACoE_Test_Automation@omnitesting.com

#Mandatory field denoting the email addresses to send the email to - addresses must be separated by ';'
EMAIL_TO_LIST=

#Optional field denoting the default email addresses to copy the email to - addresses must be separated by ';'
EMAIL_CC_LIST=

#Mandatory field representing email subject
EMAIL_SUBJECT=Results for ${APPLICATION_NAME} executed on ${APPLICATION_TIMESTAMP}

#Mandatory field representing the body of the email - can be text or HTML-based
EMAIL_TEXT_CONTENT=Contains test execution results for application=${APPLICATION_NAME}, version=${APPLICATION_VERSION} executed on ${APPLICATION_TIMESTAMP}.

#HTML files to include representing the body of the email - each is semi-colon delimited.  If ARCHIVE_SERVER_ENABLE is enabled,
#then property ARCHIVE_HTML_RESULTS_FILE is pre-appended
EMAIL_HTML_FILE=

#Denotes an external properties file containing 'TO' and 'CC' properties to append to above email addresses.
#Addresses must be separated by ';'.  The file is deleted after the addresses are read in
EMAIL_EXTERNAL_ADDRESS_FILE=${BASE_DIR}/email_addresses.properties

#Optional attachment specifying files or directories as a semicolon delimited list
EMAIL_ATTACHMENT_FILES=${LOG_DIR}/${LOG4J_BASEFILE};${LOG_DIR}/${LOG4J_HTML_BASEFILE};${SNAPSHOT_DIR}

#HTML file containing contact information to be inserted into the body of the email-MANDATORY FILE
EMAIL_SIGNATURE_FILE=${BASE_DIR}/EmailSignature.html

#Optional contact information for EMAIL_SIGNATURE_FILE containing properties specified as key-value pairs delimited by semi-colon.  Properties are name, division, team, phoneno, cellno, email_address
#For example:EMAIL_SIGNATURE_CONTACT=name=Azim Ali;division=Client Experience Delivery Division;team=Quality Assurance Center of
#Excellence;phoneno=212.555.0000;cellno=333.555.0000;email_address=aspcaa1@omnitesting.net
EMAIL_SIGNATURE_CONTACT=name=Contact Name;division=Client Experience Delivery Division;team=Quality Assurance Center of Excellence;phoneno=212.555.0000;cellno=333.555.0000;email_address=contact_name@omnitesting.net

#Flag to determine if to send the video file of the session as an attachment to email. Large video files may not be sent if the email server deem it to be too large
EMAIL_ATTACH_VIDEO=false

#Limit the number of email files kept at any given time
EMAIL_RETENTION_FILES=30

################ FOLLOWING PROPERTIES PERTAIN TO SCREEN RECORDING CAPABILITIES USING OPENSOURCE LIBRARY XUGGLER ################
#Enables video recording capability - handy for recording test execution - specify true or false
VIDEO_RECORDING_ENABLED=false

#Format type for video recording - currently supports avi, mp4, mov video formats
#Call ScreenRecorder.getFormatTypes() for current list, default is mp4
VIDEO_FORMAT_TYPE=mp4

#Optional trailer to insert into video, great for getting the message out - default is blank.
#VIDEO_TRAILER=${VIDEO_DIR}/Trailer.mp4
VIDEO_TRAILER=

#Sets the frame rate for the screen recorder.  Default is 60 milliseconds - a larger value will result in a smaller video file with less resolution.
#Conversely, a smaller value will result in more frames being saved and a larger video file with more resolution
VIDEO_FRAME_RATE=60

#Insert video trailer at beginning or end of video - values are BEGIN or END
VIDEO_TRAILER_INSERT=BEGIN

#Optional JPG or PNG file to brand the video recording with - default is blank
#VIDEO_LOGO=${VIDEO_DIR}/video_logo.jpg
VIDEO_LOGO=

#Location of the logo: TL-top left, TR-top right(default), BL-bottom left, BR-bottom right or CE-center
VIDEO_LOGO_POSITION=TR

#A number representing the % of transparency for displaying the logo - default is 60
VIDEO_LOGO_TRANSPARENCY=60

#Since video files tend to be large, limit the number of files kept at any given time
VIDEO_RETENTION_FILES=5

################ FOLLOWING PROPERTIES PERTAIN TO ARCHIVE SERVER SETTINGS ################
#The Automation Archive Server component works in concert with the framework to centrally store result files and generate ROI results in HP ALM.
#Pre-requisites for using it requires registering the application via the Registration portal component.

#Enable/disable the services of the ArchiveServer to centrally store result files
ARCHIVE_SERVER_ENABLE=false

#Server host that ArchiveServer is running on
ARCHIVE_SERVER_HOST=<value needed>

#Server port that ArchiveServer is listening on
ARCHIVE_SERVER_PORT=<value needed>

#Generate ROI files - values are true or false.  Default value is usually derived from ARCHIVE_SERVER_ENABLE value
ARCHIVE_GENERATE_ROI_FILES=${ARCHIVE_SERVER_ENABLE}

#Archive HTML results resource page - contains the resources for ARCHIVE_HTML_RESULTS_FILE page
ARCHIVE_HTML_RESOURCES_DIR=${TEMPLATES_DIR}/Custom_Archive_Template_files

#Archive HTML results page - home page for displaying test results
ARCHIVE_HTML_RESULTS_FILE=${TEMPLATES_DIR}/Custom_Archive_Template.htm

#Archive Server ReceiveFile servlet URL
ARCHIVE_SERVER_RECEIVE_URL=http://${ARCHIVE_SERVER_HOST}:${ARCHIVE_SERVER_PORT}/ReceiveFile

#Archive Server ReceiveROIFile servlet URL
ARCHIVE_SERVER_ROI_URL=http://${ARCHIVE_SERVER_HOST}:${ARCHIVE_SERVER_PORT}/ReceiveROIFile

#Archive Server ReceiveROIValidate servlet URL
ARCHIVE_SERVER_VALIDATE_URL=http://${ARCHIVE_SERVER_HOST}:${ARCHIVE_SERVER_PORT}/ReceiveROIValidate?appname=${APPLICATION_NAME}&version=${APPLICATION_VERSION}

################ FOLLOWING PROPERTIES ARE USED TO CREATE A CUSTOMIZED REPORT FILE ################
#For customized reports, Apache Velocity template functionality is used - see com.selenium.framework.qa_automation.reporter.Reporter class
#See example of using it in com.selenium.framework.qa_automation.SeleniumDemo.java and in README.TXT located in the templates dir

#Enable/disable custom reporting
CUSTOM_REPORT_ENABLE=false

#Location of custom templates
CUSTOM_REPORT_TEMPLATE_DIR=${TEMPLATES_DIR}/Customized_Reports_Library

#Name of Apache Velocity template file - see sub-directory templates/Customized_Reports_Library for *.vm files
CUSTOM_REPORT_TEMPLATE_FILE=${CUSTOM_REPORT_TEMPLATE_DIR}/template_tabular_resultset.vm

#CUSTOM_REPORT_TEMPLATE_FILE=${CUSTOM_REPORT_TEMPLATE_DIR}/template_tabular_search_resultset.vm

#Location of output reports
CUSTOM_REPORT_DIR=${BASE_DIR}/reports

#Name of output report - ${APPLICATION_TIMESTAMP} is derived at runtime
CUSTOM_REPORT_HTML_FILE=${CUSTOM_REPORT_DIR}/${APPLICATION_NAME}Report-${APPLICATION_TIMESTAMP}.html

#Title of report
CUSTOM_REPORT_TITLE=${APPLICATION_NAME} version ${APPLICATION_VERSION}

#Environment for current session
CUSTOM_REPORT_ENVIRONMENT=${ENVIRONMENT}

#User of current session
CUSTOM_REPORT_USER=${USERNAME}

#Current browser used - possible values are ${BROWSER} to use the session's browser, Multiple Browsers, N/A, etc
#CUSTOM_REPORT_BROWSER=Multiple Browsers
CUSTOM_REPORT_BROWSER=${BROWSER}

#Miscellaneous report properties to pass to the report defined as key-value pairs, delimited by ';'
CUSTOM_REPORT_PROPERTIES=

#Max number of custom report files to maintain or 0 to maintain all reports
CUSTOM_REPORT_FILE_RETENTION=10

################ FOLLOWING PROPERTIES PERTAIN TO OBJECT AUTOMATION VIA IMAGE FILES USING OPENSOURCE LIBRARY SIKULIX ################

#Enables Sikulix processing
SIKULI_ENABLED=FALSE

#For using Sikulix, controls the sensitivity detection of objects on the screen by the Sikulix libraries
SIKULI_SENSITIVITY=.45

#For using Silulix to navigate menus, controls the sensitivity detection of objects on the menu screen by the Sikulix libraries
SIKULI_MENU_SENSITIVITY=.90

#Defines if popups can be enabled to show during the session
SIKULI_VERBOSE=true

#Enables animations on the screen
SIKULI_SETTINGS.SETSHOWACTIONS=true

#Specifies the number of seconds to delay animation action on the screen
SIKULI_SETTINGS.SLOWMOTIONDELAY=3

#Period of time in seconds to wait
SIKULI_SETTINGS.AUTOWAITTIMEOUT=3.0

#Number of times per second to scan the region for an event
SIKULI_SETTINGS.OBSERVESCANRATE=0.4

################ COMBINATION OF ENVIRONMENT AND USER ENTRIES DERIVED FROM ENVIRONMENT_TYPES PROPERTY ################
NO_CAPTURE_SNAPSHOT=${BASE_DIR}/resources/SNAPSHOT_NOT_SUPPORTED.png

#Defines user of type 'INTERNAL' for environment=UAT
UAT_INTERNAL_UID=<TO BE DEFINED>

#Defines user's password of type 'INTERNAL' for environment=UAT
UAT_INTERNAL_PWD=<TO BE DEFINED>

#Defines static PIN id for user of type 'INTERNAL' for environment=UAT.
#May not be applicable for all regions such as PROD or LIVE regions
UAT_INTERNAL_STATIC_PIN=<TO BE DEFINED>

#Defines user of type 'EXTERNAL' for environment=UAT
UAT_EXTERNAL_UID=<TO BE DEFINED>

#Defines user's password of type 'EXTERNAL' for environment=UAT
UAT_EXTERNAL_PWD=<TO BE DEFINED>

#Defines static PIN id for user of type 'EXTERNAL' for environment=UAT.
#May not be applicable for all regions such as PROD or LIVE regions
UAT_EXTERNAL_STATIC_PIN=<TO BE DEFINED>

#Defines user of type 'TOKEN' for environment=UAT
UAT_TOKEN_UID=<TO BE DEFINED>

#Defines user's password of type 'TOKEN' for environment=UAT
UAT_TOKEN_PWD=<TO BE DEFINED>

#Defines static PIN id for user of type 'TOKEN' for environment=UAT.
#May not be applicable for all regions such as PROD or LIVE regions
UAT_TOKEN_STATIC_PIN=<TO BE DEFINED>

#Defines user of type 'INTERNAL' for environment=DCAT
DCAT_INTERNAL_UID=<TO BE DEFINED>

#Defines user's password of type 'INTERNAL' for environment=DCAT
DCAT_INTERNAL_PWD=<TO BE DEFINED>

#Defines static PIN id for user of type 'INTERNAL' for environment=DCAT.
#May not be applicable for all regions such as PROD or LIVE regions
DCAT_INTERNAL_STATIC_PIN=<TO BE DEFINED>

#Defines user of type 'EXTERNAL' for environment=DCAT
DCAT_EXTERNAL_UID=<TO BE DEFINED>

#Defines user's password of type 'EXTERNAL' for environment=DCAT
DCAT_EXTERNAL_PWD=<TO BE DEFINED>

#Defines static PIN id for user of type 'EXTERNAL' for environment=DCAT.
#May not be applicable for all regions such as PROD or LIVE regions
DCAT_EXTERNAL_STATIC_PIN=<TO BE DEFINED>

#Defines user of type 'TOKEN' for environment=DCAT
DCAT_TOKEN_UID=<TO BE DEFINED>

#Defines user's password of type 'TOKEN' for environment=DCAT
DCAT_TOKEN_PWD=<TO BE DEFINED>

#Defines static PIN id for user of type 'TOKEN' for environment=DCAT.
#May not be applicable for all regions such as PROD or LIVE regions
DCAT_TOKEN_STATIC_PIN=<TO BE DEFINED>

#Defines user of type 'INTERNAL' for environment=PROD
PROD_INTERNAL_UID=<TO BE DEFINED>

#Defines user's password of type 'INTERNAL' for environment=PROD
PROD_INTERNAL_PWD=<TO BE DEFINED>

#Defines static PIN id for user of type 'INTERNAL' for environment=PROD.
#May not be applicable for all regions such as PROD or LIVE regions
PROD_INTERNAL_STATIC_PIN=<TO BE DEFINED>

#Defines user of type 'EXTERNAL' for environment=PROD
PROD_EXTERNAL_UID=<TO BE DEFINED>

#Defines user's password of type 'EXTERNAL' for environment=PROD
PROD_EXTERNAL_PWD=<TO BE DEFINED>

#Defines static PIN id for user of type 'EXTERNAL' for environment=PROD.
#May not be applicable for all regions such as PROD or LIVE regions
PROD_EXTERNAL_STATIC_PIN=<TO BE DEFINED>

#Defines user of type 'TOKEN' for environment=PROD
PROD_TOKEN_UID=<TO BE DEFINED>

#Defines user's password of type 'TOKEN' for environment=PROD
PROD_TOKEN_PWD=<TO BE DEFINED>

#Defines static PIN id for user of type 'TOKEN' for environment=PROD.
#May not be applicable for all regions such as PROD or LIVE regions
PROD_TOKEN_STATIC_PIN=<TO BE DEFINED>

#Defines URL for accessing application in environment=UAT
UAT_URL=<TO BE DEFINED>

#Defines the STEPUP URL for logging in with access pin=UAT_STATIC_PIN to application in environment=UAT
UAT_STEPUP_URL=${UAT_URL}/nxn/#/stepupFlow

#Defines website title for above UAT_URL
UAT_TITLE=<TO BE DEFINED>

#Defines URL for accessing application in environment=DCAT
DCAT_URL=<TO BE DEFINED>

#Defines the STEPUP URL for logging in with access pin=DCAT_STATIC_PIN to application in environment=DCAT
DCAT_STEPUP_URL=${DCAT_URL}/nxn/#/stepupFlow

#Defines website title for above DCAT_URL
DCAT_TITLE=<TO BE DEFINED>

#Defines URL for accessing application in environment=PROD
PROD_URL=<TO BE DEFINED>

#Defines the STEPUP URL for logging in with access pin=PROD_STATIC_PIN to application in environment=PROD
PROD_STEPUP_URL=${PROD_URL}/nxn/#/stepupFlow

#Defines website title for above PROD_URL
PROD_TITLE=<TO BE DEFINED>

